package List

data List a = Nil | Cons(head: a, tail: List a)

def isEmpty(l) = match l {
    Nil -> true
    Cons(_, _) -> false
}

def foldl(self: List a, z: b, f: a -> b -> b): b = match self {
    Nil -> z
    Cons(hd, tl) -> foldl(tl, f(hd, z), f)
}

def foldr(self: List a, z: b, f: a -> b -> b): b = match self {
    Nil -> z
    Cons(hd, tl) -> f(hd, foldr(tl, z, f))
}

def length(l) = foldl(l, 0, { e, acc -> acc + 1})

def map(self, f) = foldl(self, Nil, { e, acc -> Cons(f(e), acc) })

def filter(self, p: a -> Bool) = match self {
    Nil -> Nil
    Cons(hd, tl) -> if p(hd) then Cons(hd, filter(tl, p)) else filter(tl, p)
}


def main() = {
    list = Cons("1", Cons("2", Nil));
    len = list.length;
    ints = map(list, toInt);
    ints2 = map(ints, { i -> i + 10});
    println(toString(ints2));
    println("Hello world! ${list}. Is empty: ${list.isEmpty}, length = ${len.toString}");
}