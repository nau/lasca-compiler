module Prelude

extern def print(s: String): Unit = "print"
extern def println(s: String): Unit = "println"
extern def toString(a: a): String = "toString"
extern def sqrt(a: Float): Float = "sqrt"
extern def getArgs(): Array String = "getArgs"
extern def toInt(s: String): Int = "toInt"
extern def concat(strings: Array String): String = "concat"
extern def die(msg: String): a = "die"
extern def runtimeIsConstr(constr: a, name: String): Bool = "runtimeIsConstr"
extern def runtimeCheckTag(value: a, tag: Int): Bool = "runtimeCheckTag"
extern def runtimeCompare(lhs: a, rhs: a): Int = "runtimeCompare"

extern def intToByte(i: Int): Byte = "intToByte"
extern def byteToInt(i: Byte): Int = "byteToInt"

data Ref a = Ref(getRef: a)

data FileHandle

extern def openFile(filename: String, mode: String): FileHandle = "lascaOpenFile"
extern def readFile(filename: String): String = "lascaReadFile"
extern def writeFile(filename: String, string: String): Unit = "lascaWriteFile"

extern def updateRef(ref: Ref a, value: a): Ref a = "updateRef"
