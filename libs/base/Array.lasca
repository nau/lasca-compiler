module Array

extern def makeArray(size: Int, init: a): Array a = "makeArray"
extern def append(first: Array a, second: Array a): Array a = "arrayAppend"
extern def copy(src: Array a, srcPos: Int, dest: Array a, destPos: Int, length: Int): Unit = "arrayCopy"
extern def getIndex(array: Array a, i: Int): a = "arrayGetIndex"
extern def setIndex(array: Array a, i: Int, value: a): Array a = "arraySetIndex"
extern def length(array: Array a): Int = "arrayLength"
extern def init(n: Int, f: Int -> a): Array a = "arrayInit"

def map(array, f) = {
    len = length(array);
    init(len, { idx -> f(array[idx]) });
}

def foreachgo(array, f, i) = {
    len = length(array);
    if i < len then {
        f(array[i]); foreachgo(array, f, i + 1)
    } else ()
}

def foreach(array: [a], f: a -> b): Unit = {
    foreachgo(array, f, 0);
}

def range(start: Int, end: Int, step: Int): Array Int = {
    init((end - start) / step + 1, { i -> start + i * step })
}

def transformGo(array, f, i) = {
    len = length(array);
    if i < len then {
        setIndex(array, i, f(i, array[i]));
        transformGo(array, f, i + 1)
    } else ()
}

def transform(array: Array a, f: Int -> a -> a): Array a = {
    transformGo(array, f, 0)
}

def testArray() = {
    a = makeArray(10, "a");
    b = makeArray(10, "b");
    c = init(5, { i -> i.toString });
    d = range(2, 8, 3);
    setIndex(a, 2, b[1]);
    println(toString(a));
    println(toString(b));
    println(toString(c));
    println(toString(d));
    println(toString(append(a, b)));
    copy(b, 0, a, 4, 5);
    println(toString(a));
}


def main() = {
    testArray();
    println("Hello")
}
